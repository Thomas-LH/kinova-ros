;; Auto-generated. Do not edit!


(when (boundp 'kinova_msgs::PoseAndSizeGoal)
  (if (not (find-package "KINOVA_MSGS"))
    (make-package "KINOVA_MSGS"))
  (shadow 'PoseAndSizeGoal (find-package "KINOVA_MSGS")))
(unless (find-package "KINOVA_MSGS::POSEANDSIZEGOAL")
  (make-package "KINOVA_MSGS::POSEANDSIZEGOAL"))

(in-package "ROS")
;;//! \htmlinclude PoseAndSizeGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass kinova_msgs::PoseAndSizeGoal
  :super ros::object
  :slots (_object_pose _object_size _object_class ))

(defmethod kinova_msgs::PoseAndSizeGoal
  (:init
   (&key
    ((:object_pose __object_pose) (instance geometry_msgs::PointStamped :init))
    ((:object_size __object_size) (instance geometry_msgs::Point :init))
    ((:object_class __object_class) "")
    )
   (send-super :init)
   (setq _object_pose __object_pose)
   (setq _object_size __object_size)
   (setq _object_class (string __object_class))
   self)
  (:object_pose
   (&rest __object_pose)
   (if (keywordp (car __object_pose))
       (send* _object_pose __object_pose)
     (progn
       (if __object_pose (setq _object_pose (car __object_pose)))
       _object_pose)))
  (:object_size
   (&rest __object_size)
   (if (keywordp (car __object_size))
       (send* _object_size __object_size)
     (progn
       (if __object_size (setq _object_size (car __object_size)))
       _object_size)))
  (:object_class
   (&optional __object_class)
   (if __object_class (setq _object_class __object_class)) _object_class)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PointStamped _object_pose
    (send _object_pose :serialization-length)
    ;; geometry_msgs/Point _object_size
    (send _object_size :serialization-length)
    ;; string _object_class
    4 (length _object_class)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PointStamped _object_pose
       (send _object_pose :serialize s)
     ;; geometry_msgs/Point _object_size
       (send _object_size :serialize s)
     ;; string _object_class
       (write-long (length _object_class) s) (princ _object_class s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PointStamped _object_pose
     (send _object_pose :deserialize buf ptr-) (incf ptr- (send _object_pose :serialization-length))
   ;; geometry_msgs/Point _object_size
     (send _object_size :deserialize buf ptr-) (incf ptr- (send _object_size :serialization-length))
   ;; string _object_class
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _object_class (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get kinova_msgs::PoseAndSizeGoal :md5sum-) "4c6131538507f7479aa2828d565cd71a")
(setf (get kinova_msgs::PoseAndSizeGoal :datatype-) "kinova_msgs/PoseAndSizeGoal")
(setf (get kinova_msgs::PoseAndSizeGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Goal
geometry_msgs/PointStamped object_pose
geometry_msgs/Point object_size
string object_class

================================================================================
MSG: geometry_msgs/PointStamped
# This represents a Point with reference coordinate frame and timestamp
Header header
Point point

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :kinova_msgs/PoseAndSizeGoal "4c6131538507f7479aa2828d565cd71a")


